{
  "model": "opusplan",
  "permissions": {
    "defaultMode": "acceptEdits",
    "allow": [
      "Read",
      "LS",
      "Glob",
      "Grep",
      "NotebookRead",
      "Task",
      "TodoWrite",

      "WebSearch",
      "WebFetch",
      "mcp__context7__resolve-library-id(*)",
      "mcp__context7__get-library-docs(*)",
      "mcp__ide__getDiagnostics",

      "Bash(npm run:*)",
      "Bash(npm ci)",
      "Bash(npm run build)",
      "Bash(npm run lint)",
      "Bash(yarn:*)",
      "Bash(pnpm:*)",
      "Bash(uv:*)",
      "Bash(pip install:*)",

      "Bash(node:*)",
      "Bash(deno:*)",
      "Bash(bun:*)",
      "Bash(pytest:*)",
      "Bash(ruff:*)",
      "Bash(black:*)",
      "Bash(flake8:*)",
      "Bash(mypy:*)",
      "Bash(prettier:*)",
      "Bash(eslint:*)",
      "Bash(tsc:*)",
      "Bash(jest:*)",
      "Bash(vitest:*)",
      "Bash(go test:*)",
      "Bash(go build:*)",
      "Bash(mvn test:*)",
      "Bash(mvn package:*)",
      "Bash(gradle test:*)",
      "Bash(gradle build:*)",

      "Bash(git add -A)",
      "Bash(git add:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(git diff:*)",
      "Bash(git fetch:*)",
      "Bash(git log:*)",
      "Bash(git merge:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git rebase:*)",
      "Bash(git remote:*)",
      "Bash(git rev-parse:*)",
      "Bash(git show:*)",
      "Bash(git stash:*)",
      "Bash(git status:*)",
      "Bash(git tag:*)",

      "Bash(ls:*)",
      "Bash(pwd:*)",
      "Bash(cd:*)",
      "Bash(echo:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(which:*)",
      "Bash(chmod +x:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(ln -s:*)",

      "Bash(command tmux:*)",
      "Bash(tmux:*)",

      "Bash(docker ps:*)",
      "Bash(docker images:*)",
      "Bash(docker logs:*)",
      "Bash(docker build:*)",
      "Bash(docker run:*)",
      "Bash(docker exec:*)",
      "Bash(docker inspect:*)",
      "Bash(docker compose ps:*)",
      "Bash(docker compose config:*)",

      "Bash(podman ps:*)",
      "Bash(podman images:*)",
      "Bash(podman logs:*)",
      "Bash(podman build:*)",
      "Bash(podman run:*)",
      "Bash(podman exec:*)",

      "Bash(kubectl get:*)",
      "Bash(kubectl describe:*)",
      "Bash(kubectl logs:*)",
      "Bash(kubectl top:*)",
      "Bash(kubectl explain:*)",

      "Bash(helm list:*)",
      "Bash(helm repo update:*)",

      "Bash(ack:*)",
      "Bash(docker stats:*)",
      "Bash(gh issue view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh workflow:*)",
      "Bash(launchctl:*)",

      "Bash(aerospace:*)",

      "Bash(aws sts get-caller-identity:*)",
      "Bash(aws s3 ls:*)",
      "Bash(gcloud auth list:*)",
      "Bash(gcloud config list:*)",
      "Bash(az account show:*)"
    ],
    "ask": [
      "Bash(rm:*)",
      "Bash(rmdir:*)",
      "Bash(sudo:*)",

      "Bash(psql:*)",
      "Bash(mysql:*)",
      "Bash(sqlcmd:*)",
      "Bash(sqlite3:*)",
      "Bash(mongo:*)",

      "Bash(kubectl delete:*)",
      "Bash(kubectl apply:*)",
      "Bash(kubectl create:*)",
      "Bash(kubectl scale:*)",
      "Bash(kubectl rollout:*)",
      "Bash(kubectl set image:*)",
      "Bash(kubectl cordon:*)",
      "Bash(kubectl drain:*)",

      "Bash(helm install:*)",
      "Bash(helm upgrade:*)",
      "Bash(helm rollback:*)",
      "Bash(helm delete:*)",
      "Bash(helm uninstall:*)",

      "Bash(terraform apply:*)",
      "Bash(terraform destroy:*)",
      "Bash(terraform state:*)",

      "Bash(docker compose up:*)",
      "Bash(docker compose down:*)",
      "Bash(docker stop:*)",
      "Bash(docker start:*)",
      "Bash(docker rm:*)",
      "Bash(docker rmi:*)",
      "Bash(docker system prune:*)",

      "Bash(podman rm:*)",
      "Bash(podman rmi:*)",
      "Bash(podman system prune:*)",

      "Bash(dd:*)",
      "Bash(mkfs:*)",
      "Bash(fdisk:*)",
      "Bash(parted:*)",
      "Bash(chown:*)",
      "Bash(sysctl:*)",
      "Bash(iptables:*)",
      "Bash(nft:*)",
      "Bash(ufw:*)",

      "Bash(systemctl stop:*)",
      "Bash(systemctl disable:*)",
      "Bash(systemctl restart:*)",
      "Bash(service stop:*)",
      "Bash(service restart:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)",

      "Bash(killall:*)",
      "Bash(pkill:*)",
      "Bash(kill -9:*)",
      "Bash(kill:*)",

      "Bash(brew install:*)",
      "Bash(apt install:*)",
      "Bash(apt-get install:*)",
      "Bash(yum install:*)",
      "Bash(dnf install:*)",
      "Bash(pacman -S:*)",
      "Bash(choco install:*)",

      "Bash(npm install)",
      "Bash(yarn install)",
      "Bash(pnpm install)",

      "Bash(git reset --hard:*)",
      "Bash(git clean:*)",
      "Bash(git revert:*)",
      "Bash(git tag -d:*)"
    ]
  },
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/notification_handler.py"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/smart_permissions.py"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/command_logger.py"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/stop/stop_markdown_formatter.py"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/stop/stop_python_formatter.py"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/stop/stop_notification.py"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/stop/stop_tmux_bell.py"
          },
          {
            "type": "command",
            "command": "~/.claude/hooks/stop/stop_session_summary.py"
          }
        ]
      }
    ]
  }
}
