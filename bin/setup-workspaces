#!/bin/bash
# AeroSpace Workspace Setup Script
# Dynamically distributes workspaces based on monitor count

# Check if aerospace is available
if ! command -v aerospace &> /dev/null; then
    echo "✗ AeroSpace not found"
    exit 1
fi

# Save current workspace
INITIAL_WORKSPACE=$(aerospace list-workspaces --focused)

# Get monitor count
MONITOR_COUNT=$(aerospace list-monitors 2>/dev/null | wc -l | tr -d ' ')

# Define workspace sets
NUMBERS="1 2 3 4 5 6 7 8 9 0"
LETTERS="A B D E G I M N O P Q R S T U V W Y"

case $MONITOR_COUNT in
    1)
        # Single monitor: all workspaces go to monitor 1
        echo "Detected 1 monitor - configuring all workspaces for single display"
        for ws in $NUMBERS $LETTERS; do
            aerospace workspace $ws && aerospace move-workspace-to-monitor 1 >/dev/null 2>&1
        done
        ;;
    2)
        # Two monitors: numbers to monitor 1, letters to monitor 2  
        echo "Detected 2 monitors - numbers to monitor 1, letters to monitor 2"
        for ws in $NUMBERS; do
            aerospace workspace $ws && aerospace move-workspace-to-monitor 1 >/dev/null 2>&1
        done
        for ws in $LETTERS; do
            aerospace workspace $ws && aerospace move-workspace-to-monitor 2 >/dev/null 2>&1
        done
        ;;
    3)
        # Three monitors: 1-5 to monitor 1, 6-0 to monitor 3, letters to monitor 2
        echo "Detected 3 monitors - using optimal 3-monitor layout"
        for ws in 1 2 3 4 5; do
            aerospace workspace $ws && aerospace move-workspace-to-monitor 1 >/dev/null 2>&1
        done
        for ws in 6 7 8 9 0; do
            aerospace workspace $ws && aerospace move-workspace-to-monitor 3 >/dev/null 2>&1
        done
        for ws in $LETTERS; do
            aerospace workspace $ws && aerospace move-workspace-to-monitor 2 >/dev/null 2>&1
        done
        ;;
    *)
        echo "✗ Unsupported monitor configuration ($MONITOR_COUNT monitors)"
        echo "  Supported: 1-3 monitors"
        exit 1
        ;;
esac

# Return to initial workspace
aerospace workspace "$INITIAL_WORKSPACE" >/dev/null 2>&1

echo "✓ Workspace configuration completed"